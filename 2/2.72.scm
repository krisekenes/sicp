; Exercise 2.72. Consider the encoding procedure that you designed in exercise 2.68. What is the order of growth in the number of steps needed to encode a symbol? Be sure to include the number of steps needed to search the symbol list at each node encountered. To answer this question in general is difficult. Consider the special case where the relative frequencies of the n symbols are as described in exercise 2.71, and give the order of growth (as a function of n) of the number of steps needed to encode the most frequent and least frequent symbols in the alphabet.

; Encoding a symbol searches the symbol list at every iteration (element-of-set), but the symbol set it searches is cut down each time, at least by 1, by choosing a different branch.

; Since worst-case-scenario you reduce the problem by a single symbol on each iteration, the order of growth is for the least-frequent symbol in 2.71 is O(n^2) (n steps to travel to the leaf, n steps on each step to iterate through the symbols.) The best case (most frequent symbol) will be O(n).